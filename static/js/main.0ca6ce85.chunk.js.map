{"version":3,"sources":["images/dies.png","images/vesperum.png","images/noctis.png","images/woohoo.jpg","images/try_again.jpg","SeeSolution.js","SubmitCrossword.js","RenderPuzzle.js","LoadPuzzle.js","ChooseTheme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SeeSolution","_React$Component","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lgShow","inherits","createClass","key","value","theme","width","final","gridnums","actualSolutions","grid","_loop","i","temp3","slice","map","letter","index","react_default","a","createElement","className","id","temp2","concat","Table","bordered","size","_this2","Fragment","renderTheme","onClick","setState","Modal","show","onHide","aria-labelledby","Header","closeButton","Title","Body","renderSolution","React","Component","SubmitCrossword","won","submitted","correctGuesses","playerResponse","localStorage","getItem","toString","toUpperCase","removeItem","location","reload","_this$state","Row","Col","md","crossCheck","rechooseTheme","SeeSolution_SeeSolution","src","woohoo","alt","tryAgain","RenderPuzzle","answers","Array","Date","getDay","fill","solutions","crossword","handleChange","bind","assertThisInitialized","evt","splice","target","setItem","toConsumableArray","color","backgroundColor","acrossClues","across","replace","style","renderTheme3","downClues","down","renderTheme4","renderTheme2","renderTheme1","maxLength","onChange","renderHeader","fluid","renderAcross","renderDown","SubmitCrossword_SubmitCrossword","getDate","clear","renderTable","LoadPuzzle","puzzle","puzzleFetched","fetchCrossword","fetch","then","response","json","data","catch","error","console","RenderPuzzle_RenderPuzzle","ChooseTheme","dayTheme","eveningTheme","nightTheme","handleDies","handleVesperum","handleNoctis","Carousel","interval","Item","dies","vesperum","noctis","currentTheme","LoadPuzzle_LoadPuzzle","renderCarousel","App","apply","arguments","ChooseTheme_ChooseTheme","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ca6ce85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dies.48991312.png\";","module.exports = __webpack_public_path__ + \"static/media/vesperum.e0419573.png\";","module.exports = __webpack_public_path__ + \"static/media/noctis.1d2a0760.png\";","module.exports = __webpack_public_path__ + \"static/media/woohoo.a5e8c353.jpg\";","module.exports = __webpack_public_path__ + \"static/media/try_again.dacf865f.jpg\";","import React from 'react';\nimport {Modal, Table} from \"react-bootstrap\";\nexport class SeeSolution extends React.Component {\n    actualSolutions;\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            lgShow: false,\n        };\n    }\n\n    renderTheme(){\n        if (this.props.theme === 'Dies' || this.props.theme === 'Vesperum') {\n            return \"btn btn-outline-dark\";\n        } else if(this.props.theme === 'Noctis') {\n            return \"btn btn-outline-light\";\n        }\n    }\n\n\n    renderSolution(width){\n        let final = [];\n        let temp = [];\n        let gridnums = this.props.actualSolutions['gridnums'];\n        let grid = this.props.actualSolutions['grid'];\n        for (let i = 0; i < width; i++) {\n            temp = gridnums.slice(width * i, width * (i + 1));\n\n            let temp3 = temp.map((letter, index) =>\n                (grid[index + width*i] === '.') ?\n                    <td className={\"border border-dark blackCell\"}>\n                        <div></div>\n                    </td>\n                    :\n                    <td className={\"border border-dark eachcell\"} id={index + width*i} >\n                        <div className=\"wordNum\"><strong>{letter === 0 ? '\\u00A0' : letter}</strong></div>\n                        <div id={index + width*i} className=\"font-weight-bold text-center\">{grid[index + width*i]}</div>\n                    </td>\n            );\n            const temp2 = <tr className=\"border border-dark\" >{temp3}</tr>;\n            final = final.concat(temp2);\n        }\n\n        return(\n        <Table bordered className=\"border border-dark\" size=\"sm\">\n            <tbody className=\"border border-dark\">{final}</tbody>\n        </Table>\n        );\n    }\n    render() {\n        let lgClose = () => this.setState({ lgShow: false });\n\n        return (\n            <React.Fragment>\n                <button className={this.renderTheme() + \" crosscheck\"}\n                        onClick={() => this.setState({ lgShow: true })}>See Solution!\n                </button>\n\n                <Modal\n                    size=\"lg\"\n                    show={this.state.lgShow}\n                    onHide={lgClose}\n                    aria-labelledby=\"example-modal-sizes-title-lg\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\n                            Solutions for Today's Puzzle\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>{this.renderSolution(15)}</Modal.Body>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\n\n","import React from 'react';\nimport {Row, Col} from \"react-bootstrap\";\nimport woohoo from \"./images/woohoo.jpg\";\nimport tryAgain from \"./images/try_again.jpg\"\nimport {SeeSolution} from \"./SeeSolution\";\nexport class SubmitCrossword extends React.Component {\n\n    actualSolutions;\n    theme;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            won: false,\n            submitted: false,\n        };\n    }\n\n    renderTheme(){\n        if (this.props.theme === 'Dies' || this.props.theme === 'Vesperum') {\n            return \"btn btn-outline-dark\";\n        } else if(this.props.theme === 'Noctis') {\n            return \"btn btn-outline-light\";\n        }\n    }\n\n    crossCheck() {\n        this.setState({submitted: true});\n\n\n        let correctGuesses = 0;\n        for (let i = 0; i < 225; i++) {\n            let playerResponse = localStorage.getItem(i.toString());\n            if (playerResponse) {\n                if (playerResponse.toUpperCase() !== this.props.actualSolutions['grid'][i]) {\n                    break;\n                }\n            } else {\n               correctGuesses++;\n            }\n        }\n        if(correctGuesses > 150) {\n            this.setState({won: true});\n        }\n    }\n\n    rechooseTheme() {\n        localStorage.removeItem(\"Theme\");\n        // eslint-disable-next-line no-restricted-globals\n        location.reload();\n    }\n\n    render(){\n        const {won, submitted} = this.state;\n        return(\n            <div className={\"crosscheck\"}>\n            <Row>\n                <Col md={4}>\n            <button className={this.renderTheme() + \" crosscheck\"} onClick={() => this.crossCheck()}> Cross Check! </button>\n                </Col>\n                <Col md={4}>\n                    <button className={this.renderTheme() + \" crosscheck\"} onClick={() => this.rechooseTheme()}> Rechoose Theme! </button>\n                </Col>\n                <Col md={4}>\n                <SeeSolution actualSolutions={this.props.actualSolutions} theme={this.props.theme}/>\n                </Col>\n                <br/>\n            </Row>\n                {submitted ?\n                    <Row className={\"crosscheck\"}>\n                        {won ?\n                            <div>\n                                <img src={woohoo} className={\"img-fluid\"}\n                                     alt={\"Woohoo!! Nice work! See you tomorrow!\"}/>\n                            </div>\n                            :\n                            <div>\n                                <img src={tryAgain} className={\"img-fluid\"} alt={\"Nice work, try again tomorrow!\"}/>\n                            </div>\n                        }\n                    </Row>\n                    :\n                    <span> Check result here after clicking CrossCheck! </span>\n                }\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Col,Row, Table} from \"react-bootstrap\";\nimport {SubmitCrossword} from \"./SubmitCrossword\";\n\nexport class RenderPuzzle extends React.Component {\n    crossword;\n    theme;\n\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            answers: new Array((new Date()).getDay() === 0 ? 441 : 225).fill(\".\"),\n            solutions: this.props.crossword\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange (index, evt) {\n        const { answers } = this.state;\n        answers.splice(index, 1, evt.target.value);\n        localStorage.setItem(index, evt.target.value);\n        this.setState({ answers: [...answers] });\n    }\n\n    renderHeader(){\n        return(\n            <div className={\"text-center header\"}>\n                <h1><strong> The New York Times Crossword </strong></h1>\n                <h3><strong> {this.props.crossword['title']}</strong></h3>\n                <h5><strong> Author : {this.props.crossword['author']} </strong></h5>\n                <h5><strong>Editor : {this.props.crossword['editor']} </strong></h5>\n            </div>)\n    }\n\n    renderTheme1(){\n        let dayMode = {\n            color: 'black',\n            backgroundColor: '#FFEBCD'\n        };\n\n        let eveningMode = {\n            color: 'black',\n            backgroundColor: '#FFDBA5'\n        };\n\n        let nightMode = {\n            color: '#FFE9CD',\n            backgroundColor: '#242124'\n        };\n\n        if (this.props.theme === 'Dies') {\n            return dayMode;\n        } else if (this.props.theme === 'Vesperum'){\n            return eveningMode;\n        } else if(this.props.theme === 'Noctis') {\n            return nightMode;\n        }\n    }\n\n    renderTheme2(){\n        let dayMode = {\n            backgroundColor: 'black'\n        };\n\n        let eveningMode = {\n            backgroundColor: 'black'\n        };\n\n        let nightMode = {\n            backgroundColor: '#FFE9CD'\n        };\n\n        if (this.props.theme === 'Dies') {\n            return dayMode;\n        } else if (this.props.theme === 'Vesperum'){\n            return eveningMode;\n        } else if(this.props.theme === 'Noctis') {\n            return nightMode;\n        }\n    }\n\n    renderTheme3(){\n        let dayMode = {\n            color: 'black',\n            backgroundColor: '#F9DDC5'\n        };\n\n        let eveningMode = {\n            color: 'black',\n            backgroundColor: '#F7BE8D'\n        };\n\n        let nightMode = {\n            color: '#FFE9CD',\n            backgroundColor: '#656365'\n        };\n\n        if (this.props.theme === 'Dies') {\n            return dayMode;\n        } else if (this.props.theme === 'Vesperum'){\n            return eveningMode;\n        } else if(this.props.theme === 'Noctis') {\n            return nightMode;\n        }\n    }\n\n    renderTheme4(){\n        if (this.props.theme === 'Dies' || this.props.theme === 'Vesperum') {\n            return \"border border-dark\";\n        } else if(this.props.theme === 'Noctis') {\n            return \"border border-light\";\n        }\n    }\n\n\n    renderAcross(){\n        const across = this.props.crossword['clues']['across'];\n\n        const acrossClues = across.map((across) =>\n            <span>{across.replace(/&quot;/g,'\"')}<br/></span>\n        );\n\n        return(\n            <div className=\"acrosslist\" style={this.renderTheme3()}>\n                <h6 className=\"text-center across\"> ACROSS </h6>\n            <div>{acrossClues}</div>\n            </div>\n        );\n    }\n\n    renderDown() {\n        const down = this.props.crossword['clues']['down'];\n\n        const downClues = down.map((down) =>\n            <span>{down.replace(/&quot;/g, '\"')}<br/></span>\n        );\n\n\n\n        return(\n            <div className=\"acrosslist\" style={this.renderTheme3()}>\n                <h6 className=\"text-center\"> DOWN </h6>\n            <div>{downClues}</div>\n            </div>\n        );\n    }\n\n\n    renderTable(width){\n        const gridnums = this.props.crossword['gridnums'];\n        const grid = this.props.crossword['grid'];\n        let final = [];\n        let temp = [];\n            for (let i = 0; i < width; i++) {\n                temp = gridnums.slice(width * i, width * (i + 1));\n\n                let temp3 = temp.map((letter, index) =>\n                    (grid[index + width*i] === '.') ?\n                        <td className={this.renderTheme4()} style={this.renderTheme2()}>\n                            <div></div>\n                        </td>\n                        :\n                        <td className={this.renderTheme4()+ \" eachcell\"} id={index + width*i} >\n                            <div className=\"wordNum\" style={this.renderTheme1()}><strong>{letter === 0 ? '\\u00A0' : letter}</strong></div>\n                            <input id={index + width*i} style={this.renderTheme1()}\n                                   maxLength={1}\n                                   className=\"input-group border-0 font-weight-bold text-center\"\n                                   value={localStorage.getItem(index + width*i)}\n                                   onChange={(evt) => this.handleChange(index + width*i,evt)}/>\n                        </td>\n                );\n                const temp2 = <tr className={this.renderTheme4()}>{temp3}</tr>;\n                final = final.concat(temp2);\n            }\n\n        return (\n            <div className=\"crossword\">\n                {this.renderHeader()}\n                <Row fluid=\"true\">\n                    <Col className={\"clues\"}>\n                        {this.renderAcross()}\n                    </Col>\n                    <Col md={6} className=\"md-flex justify-content-md-center\">\n                        <Table bordered size=\"sm\" className={this.renderTheme4()}>\n                            <tbody className={this.renderTheme4()}>{final}</tbody>\n                        </Table>\n                    </Col>\n                    <Col className={\"clues\"}>\n                        {this.renderDown()}\n                    </Col>\n                </Row>\n                <Row>\n                    <SubmitCrossword actualSolutions={this.state.solutions} theme={this.props.theme}/>\n                </Row>\n\n            </div>\n        );\n    }\n\n    render(){\n        const dateStarted = localStorage.getItem(\"Date\");\n        if(dateStarted !== (new Date()).getDate().toString()){\n            localStorage.clear()\n        }\n\n        return(\n            <div style={this.renderTheme1()}>\n                {localStorage.setItem(\"Date\",(new Date()).getDate().toString())}\n                {(new Date()).getDay() === 0 ? this.renderTable(21) :this.renderTable(15)}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {RenderPuzzle} from \"./RenderPuzzle.js\";\n\nexport class LoadPuzzle extends React.Component {\n    theme;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            puzzle: [],\n            puzzleFetched: false\n        };\n    }\n\n\n    componentDidMount() {\n        this.fetchCrossword();\n    }\n\n    fetchCrossword() {\n        fetch('https://cors-anywhere.herokuapp.com/https://www.xwordinfo.com/JSON/Data.aspx?format=text')\n            .then(response => response.json())\n            .then(data =>\n                this.setState({\n                    puzzle: data,\n                    puzzleFetched: true\n                })\n            )\n            .catch(error => console.error(error));\n    }\n\n    render(){\n            if(this.state.puzzleFetched) {\n                return(\n                <div>\n                    <RenderPuzzle crossword={this.state.puzzle} theme={this.props.theme}/>\n                </div>\n                );\n            } else {\n                return(\n                    <div>\n                    </div>\n                );\n            }\n    }\n}","import React from 'react';\nimport {Row, Col, Carousel} from \"react-bootstrap\";\nimport dies from \"./images/dies.png\";\nimport vesperum from \"./images/vesperum.png\";\nimport noctis from \"./images/noctis.png\";\nimport {LoadPuzzle} from \"./LoadPuzzle\";\n\nexport class ChooseTheme extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dayTheme: false,\n            eveningTheme: false,\n            nightTheme: false\n        };\n        this.handleDies = this.handleDies.bind(this);\n        this.handleVesperum = this.handleVesperum.bind(this);\n        this.handleNoctis = this.handleNoctis.bind(this);\n    }\n\n    handleDies() {\n        this.setState({\n            dayTheme: true,\n        });\n        localStorage.setItem(\"Theme\",\"Dies\");\n    }\n    handleVesperum() {\n        this.setState({\n            eveningTheme: true,\n        });\n        localStorage.setItem(\"Theme\",\"Vesperum\");\n    }\n    handleNoctis() {\n        this.setState({\n            nightTheme: true,\n        });\n        localStorage.setItem(\"Theme\",\"Noctis\");\n    }\n\n    renderCarousel(){\n        return(<Carousel className={\"col-md-10 carousel\"} interval={2000}>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src={dies}\n                    alt=\"Dies Theme\"\n                />\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src={vesperum}\n                    alt=\"Vesperum Theme\"\n                />\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"d-block w-100\"\n                    src={noctis}\n                    alt=\"Noctis Theme\"\n                />\n            </Carousel.Item>\n        </Carousel>);\n    }\n\n    render() {\n        const currentTheme = localStorage.getItem(\"Theme\");\n\n        if(currentTheme){\n            return(<LoadPuzzle theme={currentTheme}/>);\n        }\n\n        return (\n            <div>\n                <Row className=\"row-bg\">\n                    <Col md={8} className=\"crosswordImg\">\n                            <h3 className=\"display-4 app-title col-md-3\">Casual Crosswords</h3>\n                    </Col>\n                    <Col md={4} className=\"welcome\">\n                        <Col className={\"hehehe\"}>\n                        <p className={\"container text-center\"}>\n                            Hello and Welcome to Casual Crosswords!\n                            Choose a theme to get started on today's New York Times Crossword Puzzle!\n                        </p>\n                    </Col>\n                        <button className=\"theme btn btn-outline-light\" onClick={this.handleDies}>Dies</button>\n                        <button className=\"theme btn btn-outline-light\" onClick={this.handleVesperum}>Vesperum</button>\n                        <button className=\"theme btn btn-outline-light\" onClick={this.handleNoctis}>Noctis</button>\n                        <Row className={\"justify-content-center\"}>\n                            {this.renderCarousel()}\n                        </Row>\n                        <h4 className={\"text-center\"}>\n                            Happy Solving!\n                        </h4>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport {ChooseTheme} from \"./ChooseTheme\";\n\nexport class App extends React.Component {\n  render() {\n    return (\n        <React.Fragment>\n          <ChooseTheme/>\n        </React.Fragment>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}